{"ast":null,"code":"var _jsxFileName = \"/Users/jaymierosen/Sites/tech-tests-2021/note-taking-app/note-taking-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { nanoid } from \"nanoid\";\nimport { useState, useEffect } from \"react\";\nimport { SketchPicker } from \"react-color\"; // components\n\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const [notes, setNotes] = useState([\n  //   {\n  //     text: \"This is my first note\",\n  //     date: \"26/06/2021\",\n  //     id: nanoid(),\n  //   },\n  //   {\n  //     text: \"This is my second note\",\n  //     date: \"16/05/2021\",\n  //     id: nanoid(),\n  //   },\n  //   {\n  //     text: \"This is my third note\",\n  //     date: \"17/01/2021\",\n  //     id: nanoid(),\n  //   },\n  // ]);\n  const [notes, setNotes] = useState(localStorage.notes ? JSON.parse(localStorage.notes) : []);\n  const [noteText, setNoteText] = useState(\"\");\n  const [editMode, setEditMode] = useState(false);\n  const [color, setColor] = useState(\"#67d7cc\");\n  const [searchText, setSearchText] = useState('');\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const handleChange = e => {\n    e.preventDefault();\n    setNoteText(e.target.value);\n  }; // const handleNewChange = (e) => {\n  //   e.preventDefault();\n  //   setNoteText(\"\");\n  // };\n\n\n  const addNote = () => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: noteText,\n      date: date.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n    setColor(color);\n  };\n\n  const handleSaveClick = e => {\n    e.preventDefault(); // The trim() method removes whitespace from both ends of a string\n\n    if (noteText.trim().length > 0) {\n      addNote(); // after note gets added, clear textarea\n\n      setNoteText(\"\"); // set color back to default\n      // setColor(\"#67d7cc\");\n    } else {\n      alert(\"Please add text!\");\n    }\n  };\n\n  const deleteNote = id => {\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  const changeEditMode = () => {\n    setEditMode(!editMode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      handleSearchNote: setSearchText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      style: {\n        backgroundColor: color,\n        width: \"100px\",\n        height: \"100px\"\n      },\n      notes: notes.filter(note => note.text.toLowerCase().includes(searchText)),\n      noteText: noteText,\n      handleChange: handleChange,\n      handleSaveClick: handleSaveClick,\n      deleteNote: deleteNote,\n      changeEditMode: changeEditMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n      color: color,\n      onChange: color => {\n        setColor(color.hex);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"hjk76TNtZtJat8JHvEIdOvtOoek=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jaymierosen/Sites/tech-tests-2021/note-taking-app/note-taking-app/src/App.js"],"names":["nanoid","useState","useEffect","SketchPicker","NotesList","Search","App","notes","setNotes","localStorage","JSON","parse","noteText","setNoteText","editMode","setEditMode","color","setColor","searchText","setSearchText","setItem","stringify","handleChange","e","preventDefault","target","value","addNote","date","Date","newNote","id","text","toLocaleDateString","newNotes","handleSaveClick","trim","length","alert","deleteNote","filter","note","changeEditMode","backgroundColor","width","height","toLowerCase","includes","hex"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { nanoid } from \"nanoid\";\nimport { useState, useEffect } from \"react\";\n\nimport { SketchPicker } from \"react-color\";\n\n// components\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\n\nconst App = () => {\n  // const [notes, setNotes] = useState([\n  //   {\n  //     text: \"This is my first note\",\n  //     date: \"26/06/2021\",\n  //     id: nanoid(),\n  //   },\n  //   {\n  //     text: \"This is my second note\",\n  //     date: \"16/05/2021\",\n  //     id: nanoid(),\n  //   },\n  //   {\n  //     text: \"This is my third note\",\n  //     date: \"17/01/2021\",\n  //     id: nanoid(),\n  //   },\n  // ]);\n\n  const [notes, setNotes] = useState(\n    localStorage.notes ? JSON.parse(localStorage.notes) : []\n  );\n\n  const [noteText, setNoteText] = useState(\"\");\n\n  const [editMode, setEditMode] = useState(false);\n\n  const [color, setColor] = useState(\"#67d7cc\");\n\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setNoteText(e.target.value);\n  };\n\n  // const handleNewChange = (e) => {\n  //   e.preventDefault();\n  //   setNoteText(\"\");\n  // };\n\n  const addNote = () => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: noteText,\n      date: date.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n    setColor(color)\n  };\n\n  const handleSaveClick = (e) => {\n    e.preventDefault();\n    // The trim() method removes whitespace from both ends of a string\n    if (noteText.trim().length > 0) {\n      addNote();\n      // after note gets added, clear textarea\n      setNoteText(\"\");\n      // set color back to default\n      // setColor(\"#67d7cc\");\n    } else {\n      alert(\"Please add text!\");\n    }\n  };\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n  \n  const changeEditMode = () => {\n    setEditMode(!editMode)\n  }\n  \n  return (\n    <div className=\"container\">\n      <Search handleSearchNote={setSearchText} />\n      <div></div>\n      <NotesList\n        style={{backgroundColor: color, width: \"100px\", height: \"100px\"}}\n        notes={notes.filter((note) =>\n          note.text.toLowerCase().includes(searchText)\n        )}\n        noteText={noteText}\n        handleChange={handleChange}\n        handleSaveClick={handleSaveClick}\n        deleteNote={deleteNote}\n        changeEditMode={changeEditMode}\n      />\n      <SketchPicker color={color} onChange={(color) => { setColor(color.hex)} } />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}